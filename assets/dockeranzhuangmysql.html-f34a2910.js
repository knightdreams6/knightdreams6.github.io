import{_ as a,o as e,c as s,b as n}from"./app-d8497c2f.js";const l={},r=n(`<h3 id="_1、拉取mysql镜像" tabindex="-1"><a class="header-anchor" href="#_1、拉取mysql镜像" aria-hidden="true">#</a> 1、拉取mysql镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、安装mysql" tabindex="-1"><a class="header-anchor" href="#_2、安装mysql" aria-hidden="true">#</a> 2、安装mysql</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123</span> <span class="token parameter variable">-d</span> mysql --character-set-server<span class="token operator">=</span>utf8mb4 --collation-server<span class="token operator">=</span>utf8mb4_unicode_ci <span class="token parameter variable">--lower_case_table_names</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、开启端口" tabindex="-1"><a class="header-anchor" href="#_3、开启端口" aria-hidden="true">#</a> 3、开启端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd –zone<span class="token operator">=</span>public –add-port<span class="token operator">=</span><span class="token number">3306</span>/tcp –permanent  // 开启端口

firewall-cmd <span class="token parameter variable">--reload</span>	// 重启使其生效
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lower-case-table-names参数" tabindex="-1"><a class="header-anchor" href="#lower-case-table-names参数" aria-hidden="true">#</a> lower_case_table_names参数</h3><blockquote><p>查看当前大小写敏感配置 show global variables like &#39;%lower_case%&#39;;</p></blockquote><ul><li>lower_case_table_names: 此参数不可动态修改，必须重启数据库</li><li>lower_case_table_names=0 表名存储为给定的大小写，比较是区分大小的</li><li>lower_case_table_names=1 表名存储在磁盘是小写的，比较的时候是不区分大小写</li><li>lower_case_table_names=2 表名存储在磁盘是大写的，比较的时候比较的是小写的</li></ul><p>不同系统下的配置</p><blockquote><p><code>linux</code>下 数据库名与表名是严格区分大小写的；</p><p>表的别名是严格区分大小写的；</p><p>列名与列的别名在所有清空下均是忽略大小写的；</p><p>变量名也是严格区分大小写的；</p><p><code>windows</code>与<code>mac OS</code>都不区分大小写</p><p><code>unix</code>下lower_case_table_names默认值为 0 .Windows下默认值是 1 .Mac OS X下默认值是 2 .</p></blockquote><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h3><p><strong>mysql 2059 authentication plugin &#39;caching_sha2_password&#39;</strong></p><blockquote><p>ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;</p><p>flush privileges;</p><p>restart</p></blockquote>`,14),o=[r];function c(t,i){return e(),s("div",null,o)}const p=a(l,[["render",c],["__file","dockeranzhuangmysql.html.vue"]]);export{p as default};
