import{_ as p,o,c as t,b as n}from"./app-c5e7af21.js";const r={},e=n('<h3 id="一-需求缘起" tabindex="-1"><a class="header-anchor" href="#一-需求缘起" aria-hidden="true">#</a> 一，需求缘起</h3><p>互联网公司，这样的场景是否似曾相识：</p><p>场景一：pm要做一个很大的运营活动，技术老大杀过来，问了两个问题：</p><p>（1）机器能抗住么？</p><p>（2）如果扛不住，需要加多少台机器？</p><p>场景二：系统设计阶段，技术老大杀过来，又问了两个问题：</p><p>（1）数据库需要分库么？</p><p>（2）如果需要分库，需要分几个库？</p><p>技术上来说，这些都是系统容量预估的问题，<strong>容量设计是架构师必备的技能之一</strong>。常见的容量评估包括数据量、并发量、带宽、CPU/MEM/DISK等，今天分享的内容，就以【并发量】为例，看看如何回答好这两个问题。</p><h3 id="二、容量评估的步骤与方法" tabindex="-1"><a class="header-anchor" href="#二、容量评估的步骤与方法" aria-hidden="true">#</a> 二、容量评估的步骤与方法</h3><p><strong>【步骤一：评估总访问量】</strong></p><p><strong>如何知道总访问量？对于一个运营活动的访问量评估，或者一个系统上线后PV的评估，有什么好的方法？</strong></p><blockquote><p>答案是：询问业务方，询问运营，产品同学，看对运营活动或者产品上线后的预期是什么。</p></blockquote><p><strong>举例：58要做一个APP-push的运营活动，计划在30分钟内完成5000w用户的push推送，预计push消息点击率10%，求push落地页系统的总访问量？</strong></p><blockquote><p>回答：5000w*10% = 500w</p></blockquote><p><strong>【步骤二：评估平均访问量QPS】</strong></p><p><strong>如何知道平均访问量QPS？</strong></p><blockquote><p>答案是：有了总量，除以总时间即可，如果按照天评估，一天按照4w秒计算。</p></blockquote><p><strong>举例1：push落地页系统30分钟的总访问量是500w，求平均访问量QPS</strong></p><blockquote><p>回答：500w/(30*60) = 2778，大概3000QPS</p></blockquote><p><strong>举例2：主站首页估计日均pv 8000w，求平均访问QPS</strong></p><blockquote><p>回答：一天按照4w秒算，8000w/4w=2000，大概2000QPS</p></blockquote><p><strong>提问：为什么一天按照4w秒计算？</strong></p><blockquote><p>回答：一天共24小时<em>60分钟</em>60秒=8w秒，一般假设所有请求都发生在白天，所以一般来说一天只按照4w秒评估</p></blockquote><p><strong>【步骤三：评估高峰QPS】</strong></p><p><strong>系统容量规划时，不能只考虑平均QPS，而是要抗住高峰的QPS，如何知道高峰QPS呢？</strong></p><blockquote><p>答案是：根据业务特性，通过业务访问曲线评估</p></blockquote><blockquote><p>假如峰值QPS大概是均值QPS的2.5倍，日均QPS为2000，于是评估出峰值QPS为5000。</p><p>说明：有一些业务例如“秒杀业务”比较难画出业务访问趋势图，这类业务的容量评估不在此列。</p></blockquote><p><strong>【步骤四：评估系统、单机极限QPS】</strong></p><p><strong>如何评估一个业务，一个服务单机能的极限QPS呢？</strong></p><blockquote><p>答案是：压力测试</p></blockquote><p>以APP-push运营活动落地页为例（日均QPS2000，峰值QPS5000)。</p><p>通过压力测试发现，web层是瓶颈，tomcat压测单机只能抗住1200的QPS（一般来说，1%的流量到数据库，数据库500QPS还是能轻松抗住的，cache的话QPS能抗住，需要评估cache的带宽，假设不是瓶颈），我们就得到了web单机极限的QPS是1200。一般来说，线上系统是不会跑满到极限的，打个8折，单机线上允许跑到QPS1000。</p><p><strong>【步骤五：根据线上冗余度回答两个问题】</strong></p><p>好了，上述步骤1-4已经得到了峰值QPS是5000，单机QPS是1000，假设线上部署了2台服务，就能自信自如的回答技术老大提出的问题了：</p><p>（1）机器能抗住么？ -&gt; 峰值5000，单机1000，线上2台，扛不住</p><p>（2）如果扛不住，需要加多少台机器？ -&gt; 需要额外3台，提前预留1台更好，给4台更稳</p><p>除了并发量的容量预估，数据量、带宽、CPU/MEM/DISK等评估亦可遵循类似的步骤。</p><h3 id="三-总结" tabindex="-1"><a class="header-anchor" href="#三-总结" aria-hidden="true">#</a> 三，总结</h3><p>互联网架构设计如何进行容量评估：</p><p><strong>【步骤一：评估总访问量】</strong> -&gt; 询问业务、产品、运营</p><p><strong>【步骤二：评估平均访问量QPS】</strong>-&gt; 除以时间，一天算4w秒</p><p><strong>【步骤三：评估高峰QPS】</strong> -&gt; 根据业务曲线图来</p><p><strong>【步骤四：评估系统、单机极限QPS】</strong> -&gt; 压测很重要</p><p><strong>【步骤五：根据线上冗余度回答两个问题】</strong> -&gt; 估计冗余度与线上冗余度差值</p><p>【转自】微信公众号： 架构师之路</p>',46),s=[e];function g(a,c){return o(),t("div",null,s)}const h=p(r,[["render",g],["__file","hulianwangjiagou，ruhejinxingrongliangsheji.html.vue"]]);export{h as default};
