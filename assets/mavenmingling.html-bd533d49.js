import{_ as e,o as a,c as d,b as r}from"./app-bcc3a327.js";const n={},h=r('<h4 id="maven-命令" tabindex="-1"><a class="header-anchor" href="#maven-命令" aria-hidden="true">#</a> Maven 命令</h4><h5 id="查看maven的版本及配置信息" tabindex="-1"><a class="header-anchor" href="#查看maven的版本及配置信息" aria-hidden="true">#</a> 查看maven的版本及配置信息</h5><p><code>mvn -version</code></p><h5 id="构建java项目" tabindex="-1"><a class="header-anchor" href="#构建java项目" aria-hidden="true">#</a> 构建java项目</h5><p><code>mvn archetype:create -DgroupId= DartifactId= </code></p><h5 id="创建web项目" tabindex="-1"><a class="header-anchor" href="#创建web项目" aria-hidden="true">#</a> 创建web项目</h5><p><code>mvn archetype:create -DgroupId= DartifactId= -DarchetypeArtifactId=maven-archetype-webapp </code></p><h5 id="编译项目代码" tabindex="-1"><a class="header-anchor" href="#编译项目代码" aria-hidden="true">#</a> 编译项目代码</h5><p><code>mvn compile</code></p><h5 id="打包项目" tabindex="-1"><a class="header-anchor" href="#打包项目" aria-hidden="true">#</a> 打包项目</h5><p><code>mvn package</code></p><h5 id="打包项目时跳过单元测试" tabindex="-1"><a class="header-anchor" href="#打包项目时跳过单元测试" aria-hidden="true">#</a> 打包项目时跳过单元测试</h5><p><code>mvn package -Dmaven.test.skip=true </code></p><h5 id="清除编译生成的target文件夹内容" tabindex="-1"><a class="header-anchor" href="#清除编译生成的target文件夹内容" aria-hidden="true">#</a> 清除编译生成的target文件夹内容</h5><p><code>mvn clean</code> ,可以配合相应命令使用 如 mvn clean package, mvn clean test</p><h5 id="打包后将其安装在本地仓库" tabindex="-1"><a class="header-anchor" href="#打包后将其安装在本地仓库" aria-hidden="true">#</a> 打包后将其安装在本地仓库</h5><p><code>mvn install</code></p><h5 id="打包后将其安装到pom文件中配置的远程仓库" tabindex="-1"><a class="header-anchor" href="#打包后将其安装到pom文件中配置的远程仓库" aria-hidden="true">#</a> 打包后将其安装到pom文件中配置的远程仓库</h5><p><code>mvn deploy</code></p><h5 id="显示所有已经解析的所有依赖" tabindex="-1"><a class="header-anchor" href="#显示所有已经解析的所有依赖" aria-hidden="true">#</a> 显示所有已经解析的所有依赖</h5><p><code>mvn dependency:list</code></p><h5 id="以树形结构展示项目中的依赖" tabindex="-1"><a class="header-anchor" href="#以树形结构展示项目中的依赖" aria-hidden="true">#</a> 以树形结构展示项目中的依赖</h5><p><code>mvn dependency:tree</code></p><h5 id="对项目中的依赖进行分析-依赖未使用-使用但未引入" tabindex="-1"><a class="header-anchor" href="#对项目中的依赖进行分析-依赖未使用-使用但未引入" aria-hidden="true">#</a> 对项目中的依赖进行分析,依赖未使用,使用但未引入</h5><p><code>mvn dependency:analyze</code></p><h5 id="生成站点目录" tabindex="-1"><a class="header-anchor" href="#生成站点目录" aria-hidden="true">#</a> 生成站点目录</h5><p><code>mvn site </code></p>',27),c=[h];function i(t,o){return a(),d("div",null,c)}const s=e(n,[["render",i],["__file","mavenmingling.html.vue"]]);export{s as default};
