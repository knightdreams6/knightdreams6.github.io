import{_ as e,o as a,c as o,b as t}from"./app-03a88084.js";const c={},r=t('<blockquote><p>简单的说，微服务是架构设计方式，分布式是系统部署方式，两者概念不同</p></blockquote><h5 id="微服务是啥" tabindex="-1"><a class="header-anchor" href="#微服务是啥" aria-hidden="true">#</a> 微服务是啥？</h5><blockquote><p>微服务是很小的服务，小到只对应一个单一的功能，只做一件事。这个服务可以单独部署运行，服务之间可以通过 RPC 来相互调用，每个微服务都是由独立的小团队开发，测试，部署，上线，负责它的整个生命周期。</p></blockquote><h5 id="微服务架构又是啥" tabindex="-1"><a class="header-anchor" href="#微服务架构又是啥" aria-hidden="true">#</a> 微服务架构又是啥？</h5><blockquote><p>在做架构设计的时候，先做逻辑架构，再做物理架构，当你拿到需求后，估算过最大用户量和并发量后，计算单个应用服务器能否满足需求，如果用户量只有几百人的小应用，单体应用就能搞定，即所有应用部署在一个应用服务器里，如果是很大用户量，且某些功能会被频繁访问，或者某些功能计算量很大，建议将应用拆解为多个子系统，各自负责各自功能，这就是微服务架构。</p></blockquote><h5 id="分布式又是啥" tabindex="-1"><a class="header-anchor" href="#分布式又是啥" aria-hidden="true">#</a> 分布式又是啥？</h5><blockquote><p>分布式服务顾名思义服务是分散部署在不同的机器上，一个服务可能负责几个功能，是一种面向SOA 架构的，服务之间也是通过 rpc 来交互或者是 webservice 来交互的。</p><p>逻辑架构设计完后就该做物理架构设计，系统应用部署在超过一台服务器或虚拟机上，且分开部署的彼此通过各种通讯协议交互信息，就可算作分布式部署，生产环境下的微服务肯定是分布式部署的，分布式部署的应用不一定是微服务架构的，比如集群部署，它是把相同应用复制到不同服务器上，但是逻辑功能上还是单体应用。</p></blockquote><h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结：</h5><p>微服务相比分布式服务来说，它的粒度更小，服务之间耦合度更低，由于每个微服务都由独立的小团队负责，因此它敏捷性更高，分布式服务最后都会向微服务架构演化，这是一种趋势， 不过服务微服务化后带来的挑战也是显而易见的，例如服务粒度小，数量大，后期运维将会很难。</p>',9),h=[r];function i(d,n){return a(),o("div",null,h)}const s=e(c,[["render",i],["__file","fenbushiyuweifuwuqubie.html.vue"]]);export{s as default};
