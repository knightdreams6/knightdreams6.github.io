import{_ as n,o as s,c as a,b as p}from"./app-c5e7af21.js";const t={},o=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> bpy
<span class="token keyword">import</span> addon_utils
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> logging

<span class="token comment"># 创建一个日志器logger并设置其日志级别为DEBUG</span>
log <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
log<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span>

<span class="token comment"># 创建一个流处理器handler并设置其日志级别为DEBUG</span>
handler <span class="token operator">=</span> logging<span class="token punctuation">.</span>StreamHandler<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
handler<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span>

<span class="token comment"># 创建一个格式器formatter并将其添加到处理器handler</span>
formatter <span class="token operator">=</span> logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span><span class="token string">&quot;%(asctime)s - %(name)s - %(levelname)s - %(message)s&quot;</span><span class="token punctuation">)</span>
handler<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>formatter<span class="token punctuation">)</span>

<span class="token comment"># 为日志器logger添加上面创建的处理器handler</span>
log<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>handler<span class="token punctuation">)</span>


<span class="token comment"># 判断x是否在 a~b 之间</span>
<span class="token keyword">def</span> <span class="token function">is_between</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">&lt;</span> x <span class="token operator">&lt;</span> <span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>


<span class="token comment"># 第一个参数:输入的stl文件路径</span>
<span class="token comment"># 第一个参数:输出的stl文件路径</span>
<span class="token comment"># 第一个参数:stl转换完要修改的比率(可选)：默认0.3</span>
<span class="token comment"># brain.py后面的 -- 含义：不让blender解析参数</span>
<span class="token comment"># 示例:  blender emptysence.blend --background --python brain.py -- /app/data/brain_g1.stl /app/data/brain.stl</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token comment"># 系统参数</span>
    argv <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv
    <span class="token comment"># 输入brain.stl文件路径</span>
    inputPath <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token comment"># 输出brain.stl文件路径</span>
    outputPath <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        inputPath <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
        outputPath <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&quot;missing require parameters: inputPath: %s, outputPath: %s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>inputPath<span class="token punctuation">,</span> outputPath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;input path: %s&quot;</span> <span class="token operator">%</span> inputPath<span class="token punctuation">)</span>
    log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;output path: %s&quot;</span> <span class="token operator">%</span> outputPath<span class="token punctuation">)</span>

    <span class="token comment"># stl转换完要修改的比率</span>
    ratio <span class="token operator">=</span> <span class="token number">0.0</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        ratio <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>
        ratio <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>ratio<span class="token punctuation">)</span>
    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">&quot;ratio param type not match: %s&quot;</span> <span class="token operator">%</span> ratio<span class="token punctuation">)</span>
        ratio <span class="token operator">=</span> <span class="token number">0.3</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> is_between<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span>ratio<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        ratio <span class="token operator">=</span> <span class="token number">0.3</span>
    log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;ratio: %s&quot;</span> <span class="token operator">%</span> ratio<span class="token punctuation">)</span>

    <span class="token comment"># 导入stl</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>import_mesh<span class="token punctuation">.</span>stl<span class="token punctuation">(</span>filepath<span class="token operator">=</span>inputPath<span class="token punctuation">)</span>
    <span class="token comment"># 启用print3d插件</span>
    addon_utils<span class="token punctuation">.</span>enable<span class="token punctuation">(</span>module_name<span class="token operator">=</span><span class="token string">&quot;object_print3d_utils&quot;</span><span class="token punctuation">)</span>

    <span class="token comment"># degenerate</span>
    bpy<span class="token punctuation">.</span>context<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>print_3d<span class="token punctuation">.</span>threshold_zero <span class="token operator">=</span> <span class="token number">0.1</span>
    <span class="token comment"># thickness</span>
    bpy<span class="token punctuation">.</span>context<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>print_3d<span class="token punctuation">.</span>thickness_min <span class="token operator">=</span> <span class="token number">0.1</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span>editmode_toggle<span class="token punctuation">(</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>reveal<span class="token punctuation">(</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>delete_loose<span class="token punctuation">(</span>use_verts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_edges<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_faces<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;DESELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_interior_faces<span class="token punctuation">(</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;FACE&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>remove_doubles<span class="token punctuation">(</span>threshold<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>dissolve_degenerate<span class="token punctuation">(</span>threshold<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_non_manifold<span class="token punctuation">(</span>extend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_wire<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_boundary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_multi_face<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                     use_non_contiguous<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_verts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>fill_holes<span class="token punctuation">(</span>sides<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_non_manifold<span class="token punctuation">(</span>extend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_wire<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_boundary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_multi_face<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                     use_non_contiguous<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_verts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;VERT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>fill_holes<span class="token punctuation">(</span>sides<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_non_manifold<span class="token punctuation">(</span>extend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_wire<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_boundary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_multi_face<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                     use_non_contiguous<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_verts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>fill_holes<span class="token punctuation">(</span>sides<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_non_manifold<span class="token punctuation">(</span>extend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_wire<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> use_boundary<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_multi_face<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                     use_non_contiguous<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> use_verts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>select_all<span class="token punctuation">(</span>action<span class="token operator">=</span><span class="token string">&#39;SELECT&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>normals_make_consistent<span class="token punctuation">(</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span>editmode_toggle<span class="token punctuation">(</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>mesh<span class="token punctuation">.</span>print3d_clean_non_manifold<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 修改比率</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span>modifier_add<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;DECIMATE&#39;</span><span class="token punctuation">)</span>
    bpy<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span>modifiers<span class="token punctuation">[</span><span class="token string">&quot;Decimate&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ratio <span class="token operator">=</span> ratio
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span>modifier_apply<span class="token punctuation">(</span>modifier<span class="token operator">=</span><span class="token string">&quot;Decimate&quot;</span><span class="token punctuation">)</span>

    <span class="token comment"># 导出stl</span>
    bpy<span class="token punctuation">.</span>ops<span class="token punctuation">.</span>export_mesh<span class="token punctuation">.</span>stl<span class="token punctuation">(</span>filepath<span class="token operator">=</span>outputPath<span class="token punctuation">,</span> use_selection<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;stl process success&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","stlmoxingjianmian.html.vue"]]);export{k as default};
